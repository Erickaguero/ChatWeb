{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\CascadeProjects\\\\ChatWeb\\\\frontend\\\\src\\\\context\\\\SocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext(undefined);\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (context === undefined) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user,\n    token\n  } = useAuth();\n  const [socket, setSocket] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUser, setTypingUser] = useState(null);\n  useEffect(() => {\n    if (user && token) {\n      const newSocket = io('http://localhost:5000', {\n        auth: {\n          token: token\n        }\n      });\n      setSocket(newSocket);\n\n      // Escuchar usuarios online\n      newSocket.on('users_online', users => {\n        setOnlineUsers(users);\n      });\n\n      // Escuchar nuevos mensajes\n      newSocket.on('new_message', message => {\n        setMessages(prev => [...prev, message]);\n      });\n\n      // Confirmar mensaje enviado\n      newSocket.on('message_sent', message => {\n        setMessages(prev => [...prev, message]);\n      });\n\n      // Escuchar indicador de escritura\n      newSocket.on('user_typing', ({\n        userId,\n        userName,\n        isTyping: typing\n      }) => {\n        if (typing) {\n          setIsTyping(true);\n          setTypingUser(userName);\n        } else {\n          setIsTyping(false);\n          setTypingUser(null);\n        }\n      });\n\n      // Manejar errores\n      newSocket.on('error', error => {\n        console.error('Socket error:', error);\n      });\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [user, token]);\n  const sendMessage = (receiverId, content) => {\n    if (socket && content.trim()) {\n      socket.emit('send_message', {\n        receiverId,\n        content: content.trim(),\n        messageType: 'text'\n      });\n    }\n  };\n  const setTyping = (receiverId, typing) => {\n    if (socket) {\n      socket.emit('typing', {\n        receiverId,\n        isTyping: typing\n      });\n    }\n  };\n  const value = {\n    socket,\n    onlineUsers,\n    messages,\n    sendMessage,\n    isTyping,\n    typingUser,\n    setTyping\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 10\n  }, this);\n};\n_s2(SocketProvider, \"xnRtl09NOWUg/L5HSp/kAzZyJ7k=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsxDEV","_jsxDEV","SocketContext","undefined","useSocket","_s","context","Error","SocketProvider","children","_s2","user","token","socket","setSocket","onlineUsers","setOnlineUsers","messages","setMessages","isTyping","setIsTyping","typingUser","setTypingUser","newSocket","auth","on","users","message","prev","userId","userName","typing","error","console","close","sendMessage","receiverId","content","trim","emit","messageType","setTyping","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/erick/CascadeProjects/ChatWeb/frontend/src/context/SocketContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\n\ninterface Message {\n  _id: string;\n  sender: {\n    _id: string;\n    name: string;\n    avatar: string;\n  };\n  receiver: {\n    _id: string;\n    name: string;\n    avatar: string;\n  };\n  content: string;\n  messageType: string;\n  createdAt: string;\n  isRead: boolean;\n}\n\ninterface OnlineUser {\n  _id: string;\n  name: string;\n  email: string;\n  isOnline: boolean;\n  lastSeen: string;\n  avatar: string;\n}\n\ninterface SocketContextType {\n  socket: Socket | null;\n  onlineUsers: OnlineUser[];\n  messages: Message[];\n  sendMessage: (receiverId: string, content: string) => void;\n  isTyping: boolean;\n  typingUser: string | null;\n  setTyping: (receiverId: string, isTyping: boolean) => void;\n  unreadMessages: { [userId: string]: number };\n  markMessagesAsRead: (userId: string) => void;\n}\n\nconst SocketContext = createContext<SocketContextType | undefined>(undefined);\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (context === undefined) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\ninterface SocketProviderProps {\n  children: ReactNode;\n}\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({ children }) => {\n  const { user, token } = useAuth();\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [onlineUsers, setOnlineUsers] = useState<OnlineUser[]>([]);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUser, setTypingUser] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (user && token) {\n      const newSocket = io('http://localhost:5000', {\n        auth: {\n          token: token\n        }\n      });\n\n      setSocket(newSocket);\n\n      // Escuchar usuarios online\n      newSocket.on('users_online', (users: OnlineUser[]) => {\n        setOnlineUsers(users);\n      });\n\n      // Escuchar nuevos mensajes\n      newSocket.on('new_message', (message: Message) => {\n        setMessages(prev => [...prev, message]);\n      });\n\n      // Confirmar mensaje enviado\n      newSocket.on('message_sent', (message: Message) => {\n        setMessages(prev => [...prev, message]);\n      });\n\n      // Escuchar indicador de escritura\n      newSocket.on('user_typing', ({ userId, userName, isTyping: typing }) => {\n        if (typing) {\n          setIsTyping(true);\n          setTypingUser(userName);\n        } else {\n          setIsTyping(false);\n          setTypingUser(null);\n        }\n      });\n\n      // Manejar errores\n      newSocket.on('error', (error) => {\n        console.error('Socket error:', error);\n      });\n\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [user, token]);\n\n  const sendMessage = (receiverId: string, content: string) => {\n    if (socket && content.trim()) {\n      socket.emit('send_message', {\n        receiverId,\n        content: content.trim(),\n        messageType: 'text'\n      });\n    }\n  };\n\n  const setTyping = (receiverId: string, typing: boolean) => {\n    if (socket) {\n      socket.emit('typing', {\n        receiverId,\n        isTyping: typing\n      });\n    }\n  };\n\n  const value = {\n    socket,\n    onlineUsers,\n    messages,\n    sendMessage,\n    isTyping,\n    typingUser,\n    setTyping\n  };\n\n  return <SocketContext.Provider value={value}>{children}</SocketContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}