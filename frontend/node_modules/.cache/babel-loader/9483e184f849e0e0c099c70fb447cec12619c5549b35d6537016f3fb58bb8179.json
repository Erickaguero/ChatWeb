{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Configurar axios\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para agregar token a las requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authService = {\n  async login(email, password) {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error en el login');\n    }\n  },\n  async register(userData) {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response3, _error$response3$data;\n      if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.errors) {\n        const errorMessages = error.response.data.errors.map(err => err.msg).join(', ');\n        throw new Error(errorMessages);\n      }\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Error en el registro');\n    }\n  },\n  async logout() {\n    try {\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Error during logout:', error);\n    }\n  },\n  async verifyToken() {\n    try {\n      const response = await api.get('/auth/verify');\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Token inválido');\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authService","login","email","password","response","post","data","error","_error$response","_error$response$data","Error","message","register","userData","_error$response2","_error$response2$data","_error$response3","_error$response3$data","errors","errorMessages","map","err","msg","join","logout","console","verifyToken","get","_error$response4","_error$response4$data"],"sources":["C:/Users/erick/CascadeProjects/ChatWeb/frontend/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api';\n\n// Configurar axios\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Interceptor para agregar token a las requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\ninterface LoginResponse {\n  success: boolean;\n  message: string;\n  token: string;\n  user: {\n    _id: string;\n    name: string;\n    email: string;\n    isOnline: boolean;\n    lastSeen: string;\n    avatar: string;\n    createdAt: string;\n  };\n}\n\ninterface RegisterData {\n  email: string;\n  password: string;\n  name: string;\n  dateOfBirth: string;\n}\n\nexport const authService = {\n  async login(email: string, password: string): Promise<LoginResponse> {\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      return response.data;\n    } catch (error: any) {\n      throw new Error(error.response?.data?.message || 'Error en el login');\n    }\n  },\n\n  async register(userData: RegisterData): Promise<LoginResponse> {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error: any) {\n      if (error.response?.data?.errors) {\n        const errorMessages = error.response.data.errors.map((err: any) => err.msg).join(', ');\n        throw new Error(errorMessages);\n      }\n      throw new Error(error.response?.data?.message || 'Error en el registro');\n    }\n  },\n\n  async logout(): Promise<void> {\n    try {\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Error during logout:', error);\n    }\n  },\n\n  async verifyToken(): Promise<{ success: boolean; user: any }> {\n    try {\n      const response = await api.get('/auth/verify');\n      return response.data;\n    } catch (error: any) {\n      throw new Error(error.response?.data?.message || 'Token inválido');\n    }\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}